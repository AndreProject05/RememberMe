package com.example.rememberme

import android.app.AlertDialog
import android.os.Bundle
import android.widget.Button
import android.widget.EditText
import androidx.appcompat.app.AppCompatActivity
import androidx.recyclerview.widget.LinearLayoutManager
import androidx.recyclerview.widget.RecyclerView

class SummaryActivity : AppCompatActivity() {

    private lateinit var recyclerView: RecyclerView
    private lateinit var adapter: ItemListAdapter
    private lateinit var dbHelper: DatabaseHelper
    private lateinit var btnBack: Button

    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        setContentView(R.layout.activity_summary)

        dbHelper = DatabaseHelper(this)
        recyclerView = findViewById(R.id.recyclerView)
        btnBack = findViewById(R.id.btnBack)

        recyclerView.layoutManager = LinearLayoutManager(this)

        loadItems()

        btnBack.setOnClickListener {
            finish()
        }
    }

    private fun loadItems() {
        val items = dbHelper.getAllItems()
        adapter = ItemListAdapter(items) { item ->
            showEditDialog(item)
        }
        recyclerView.adapter = adapter
    }

    private fun showEditDialog(item: Item) {
        val dialogView = layoutInflater.inflate(R.layout.dialog_edit_item, null)
        val editText = dialogView.findViewById<EditText>(R.id.editTextItem)
        editText.setText(item.name)

        AlertDialog.Builder(this)
            .setTitle("Modifica oggetto")
            .setView(dialogView)
            .setPositiveButton("Salva") { _, _ ->
                val newName = editText.text.toString().trim()
                if (newName.isNotEmpty()) {
                    dbHelper.updateItem(item.id, newName)
                    loadItems()
                    // Aggiorna la notifica se le notifiche sono abilitate
                    updateNotification()
                }
            }
            .setNegativeButton("Elimina") { _, _ ->
                dbHelper.deleteItem(item.id)
                loadItems()
                updateNotification()
            }
            .setNeutralButton("Annulla", null)
            .show()
    }

    private fun updateNotification() {
        val sharedPref = getSharedPreferences("RememberMePrefs", MODE_PRIVATE)
        val notificationsEnabled = sharedPref.getBoolean("notifications_enabled", true)
        if (notificationsEnabled) {
            val items = dbHelper.getAllItems().map { it.name }
            NotificationService.showNotification(this, items)
        }
    }
}